name: Build and Deploy

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "TODO_PORT=${{ secrets.PORT }}" >> .env
          echo "TODO_DBFILE=${{ secrets.DB_NAME }}" >> .env
          echo "TODO_PASSWORD=${{ secrets.PASSWORD }}" >> .env

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.2'

      - name: Install SQLite
        run: sudo apt-get install sqlite3 libsqlite3-dev

      - name: Lint the code
        run: go vet ./...

      - name: Build the application
        run: go build -o scheduler ./main.go

      - name: Run application
        run: |
          nohup ./scheduler &
          sleep 5

      - name: Run tests
        run: go test ./tests -v

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          tags: rocketikman/scheduler:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.yml"
          target: "app"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd app
            sudo docker-compose -f docker-compose.yml pull
            sudo docker-compose -f docker-compose.yml down
            sudo docker-compose -f docker-compose.yml up -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой успешно выполнен!